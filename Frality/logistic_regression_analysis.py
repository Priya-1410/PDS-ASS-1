# -*- coding: utf-8 -*-
"""Logistic_Regression_analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YqqNh3FoY0Ps0k03Hau0YrHB-VE8V9jo
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report
import seaborn as sns
import matplotlib.pyplot as plt

# File paths
cleaned_data_file = '/content/drive/MyDrive/Frality/Data_Clean/cleaned_data.csv'

# Load cleaned data
df = pd.read_csv(cleaned_data_file)

# Define features (X) and target (y)
X = df[['Age', 'Grip Strength']]  # Using age and grip strength as predictors
y = df['Frailty']  # Target variable (frailty)

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# Initialize and train the logistic regression model
model = LogisticRegression()
model.fit(X_train, y_train)

# Make predictions on the test set
y_pred = model.predict(X_test)

# Evaluate the model
accuracy = accuracy_score(y_test, y_pred)
conf_matrix = confusion_matrix(y_test, y_pred)
class_report = classification_report(y_test, y_pred)

print(f"Accuracy: {accuracy:.2f}")
print("Confusion Matrix:")
print(conf_matrix)
print("Classification Report:")
print(class_report)

# Visualize the confusion matrix
plt.figure(figsize=(6,4))
sns.heatmap(conf_matrix, annot=True, fmt="d", cmap='coolwarm', xticklabels=['Not Frail', 'Frail'], yticklabels=['Not Frail', 'Frail'])
plt.title('Confusion Matrix')
plt.xlabel('Predicted')
plt.ylabel('Actual')
plt.savefig('/content/drive/MyDrive/Frality/Result/models/confusion_matrix.png')
plt.show()